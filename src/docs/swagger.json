{
    "openapi": "3.0.0",
    "info": {
        "title": "Bookora Rest API",
        "version": "1.0.0",
        "description": "Your joyful library management system."
    },
    "servers": [
        {
            "url": "http://localhost:3600",
            "description": "Local server"
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints related to user authentication."
        },
        {
            "name": "User Management",
            "description": "Endpoints related to user management."
        },
        {
            "name": "Author Management",
            "description": "Endpoints related to book author management."
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "summary": "User login",
                "description": "Authenticates a user and returns a token.",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "zeinirfansyah"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Admin123#"
                                    }
                                },
                                "required": ["username", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid username or password"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "summary": "Create account.",
                "description": "Create a user account.",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/RegisterRequest",
                                "required": ["fullname", "username", "email", "password", "confirm_password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/UserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Username already exists."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "summary": "Create account.",
                "description": "Create a user account. Requires ADMIN role.",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/UserRequest",
                                "required": ["fullname", "username", "email", "password", "confirm_password"]
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/RegisterRequest",
                                "required": ["fullname", "username", "email", "password", "confirm_password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/UserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Username already exists."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Must be logged in."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have the required role to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all users.",
                "description": "Get all users data. Requires login.",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Optional filter to get users based on role (e.g., ADMIN or CUSTOMER).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["ADMIN", "CUSTOMER"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid user role."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Must be logged in."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have the required role to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/book-author": {
            "post": {
                "summary": "Create book author.",
                "description": "Create a book author. Requires ADMIN role.",
                "tags": ["Author Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/AuthorRequest",
                                "required": ["author_name"]
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/AuthorRequest",
                                "required": ["author_name"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Author created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Author created successfully."
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/AuthorResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Missing required fields: author_name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Must be logged in."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have the required role to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "fullname": {
                        "type": "string",
                        "example": "Zein Irfansyah"
                    },
                    "username": {
                        "type": "string",
                        "example": "zeinirfansyah"
                    },
                    "email": {
                        "type": "string",
                        "example": "zeinirfansyah@example.sample"
                    },
                    "phone": {
                        "type": "string",
                        "example": "6281234567890"
                    },
                    "password": {
                        "type": "string",
                        "example": "Admin123#"
                    },
                    "confirm_password": {
                        "type": "string",
                        "example": "Admin123#"
                    }
                }
            },
            "UserRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RegisterRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "string",
                                "enum": ["ADMIN", "CUSTOMER"],
                                "example": "CUSTOMER"
                            },
                            "profile_image": {
                                "type": "string",
                                "format": "binary",
                                "description": "The profile image file to upload."
                            }
                        }
                    }
                ]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "07527367-84b6-4213"
                    },
                    "user_code": {
                        "type": "string",
                        "example": "USR_1730760547685"
                    },
                    "fullname": {
                        "type": "string",
                        "example": "Zein Irfansyah"
                    },
                    "username": {
                        "type": "string",
                        "example": "zeinirfansyah"
                    },
                    "email": {
                        "type": "string",
                        "example": "zeinirfansyah@example.sample"
                    },
                    "phone": {
                        "type": "string",
                        "example": "6281234567890"
                    },
                    "password": {
                        "type": "string",
                        "example": "$2a$10$4qRQmMhBogwNI4.JQ3zUPOw"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": "https://th.bing.com/th/id/OIP"
                    },
                    "role": {
                        "type": "string",
                        "example": "CUSTOMER"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-11-04T22:49:07.820Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-11-04T22:49:07.820Z"
                    }
                }
            },
            "AuthorRequest": {
                "type": "object",
                "properties": {
                    "author_name": {
                        "type": "string",
                        "example": "Zein Irfansyah"
                    },
                    "author_photo": {
                        "type": "string",
                        "format": "binary",
                        "description": "The author photo file to upload."
                    }
                }
            },
            "AuthorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "07527367-84b6-4213"
                    },
                    "author_code": {
                        "type": "string",
                        "example": "AUT_1734969698463"
                    },
                    "author_name": {
                        "type": "string",
                        "example": "Zein Irfansyah"
                    },
                    "author_photo": {
                        "type": "string",
                        "example": "/uploads/author_photos/thumbnail_1734969759228.png"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-11-04T22:49:07.820Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-11-04T22:49:07.820Z"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
